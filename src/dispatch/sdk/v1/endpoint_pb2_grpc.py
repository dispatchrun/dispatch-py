# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from dispatch.sdk.v1 import endpoint_pb2 as dispatch_dot_sdk_dot_v1_dot_endpoint__pb2


class EndpointServiceStub(object):
    """EndpointService is a service allowing the trigger of programmable endpoints
    from a dispatch SDK.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateExecutions = channel.unary_unary(
            "/dispatch.sdk.v1.EndpointService/CreateExecutions",
            request_serializer=dispatch_dot_sdk_dot_v1_dot_endpoint__pb2.CreateExecutionsRequest.SerializeToString,
            response_deserializer=dispatch_dot_sdk_dot_v1_dot_endpoint__pb2.CreateExecutionsResponse.FromString,
        )


class EndpointServiceServicer(object):
    """EndpointService is a service allowing the trigger of programmable endpoints
    from a dispatch SDK.
    """

    def CreateExecutions(self, request, context):
        """CreateExecutions triggers executions of programmable endpoints.

        Executions are always asynchronous. The method does not wait for executions
        to complete before returning, it only ensures that the creation was
        persisted, and returns unique identifiers to represent the executions.

        The request contains a list of executions to be triggered; the method is
        atomic, either all executions are recorded, or none and an error is
        returned to explain the reason for the failure.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_EndpointServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "CreateExecutions": grpc.unary_unary_rpc_method_handler(
            servicer.CreateExecutions,
            request_deserializer=dispatch_dot_sdk_dot_v1_dot_endpoint__pb2.CreateExecutionsRequest.FromString,
            response_serializer=dispatch_dot_sdk_dot_v1_dot_endpoint__pb2.CreateExecutionsResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "dispatch.sdk.v1.EndpointService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class EndpointService(object):
    """EndpointService is a service allowing the trigger of programmable endpoints
    from a dispatch SDK.
    """

    @staticmethod
    def CreateExecutions(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/dispatch.sdk.v1.EndpointService/CreateExecutions",
            dispatch_dot_sdk_dot_v1_dot_endpoint__pb2.CreateExecutionsRequest.SerializeToString,
            dispatch_dot_sdk_dot_v1_dot_endpoint__pb2.CreateExecutionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
